from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from popcornhub_api.models.base_model import Model
from popcornhub_api.models.cast_member import CastMember
from popcornhub_api.models.related_movie import RelatedMovie
from popcornhub_api import util

from popcornhub_api.models.cast_member import CastMember  # noqa: E501
from popcornhub_api.models.related_movie import RelatedMovie  # noqa: E501

class Movie(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, title=None, description=None, genre=None, rating=None, release_year=None, duration=None, director=None, cast=None, poster=None, trailer_url=None, related_movies=None, awards=None):  # noqa: E501
        """Movie - a model defined in OpenAPI

        :param id: The id of this Movie.  # noqa: E501
        :type id: int
        :param title: The title of this Movie.  # noqa: E501
        :type title: str
        :param description: The description of this Movie.  # noqa: E501
        :type description: str
        :param genre: The genre of this Movie.  # noqa: E501
        :type genre: List[str]
        :param rating: The rating of this Movie.  # noqa: E501
        :type rating: float
        :param release_year: The release_year of this Movie.  # noqa: E501
        :type release_year: int
        :param duration: The duration of this Movie.  # noqa: E501
        :type duration: str
        :param director: The director of this Movie.  # noqa: E501
        :type director: str
        :param cast: The cast of this Movie.  # noqa: E501
        :type cast: List[CastMember]
        :param poster: The poster of this Movie.  # noqa: E501
        :type poster: str
        :param trailer_url: The trailer_url of this Movie.  # noqa: E501
        :type trailer_url: str
        :param related_movies: The related_movies of this Movie.  # noqa: E501
        :type related_movies: List[RelatedMovie]
        :param awards: The awards of this Movie.  # noqa: E501
        :type awards: List[str]
        """
        self.openapi_types = {
            'id': int,
            'title': str,
            'description': str,
            'genre': List[str],
            'rating': float,
            'release_year': int,
            'duration': str,
            'director': str,
            'cast': List[CastMember],
            'poster': str,
            'trailer_url': str,
            'related_movies': List[RelatedMovie],
            'awards': List[str]
        }

        self.attribute_map = {
            'id': 'id',
            'title': 'title',
            'description': 'description',
            'genre': 'genre',
            'rating': 'rating',
            'release_year': 'releaseYear',
            'duration': 'duration',
            'director': 'director',
            'cast': 'cast',
            'poster': 'poster',
            'trailer_url': 'trailerUrl',
            'related_movies': 'relatedMovies',
            'awards': 'awards'
        }

        self._id = id
        self._title = title
        self._description = description
        self._genre = genre
        self._rating = rating
        self._release_year = release_year
        self._duration = duration
        self._director = director
        self._cast = cast
        self._poster = poster
        self._trailer_url = trailer_url
        self._related_movies = related_movies
        self._awards = awards

    @classmethod
    def from_dict(cls, dikt) -> 'Movie':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Movie of this Movie.  # noqa: E501
        :rtype: Movie
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Movie.


        :return: The id of this Movie.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Movie.


        :param id: The id of this Movie.
        :type id: int
        """

        self._id = id

    @property
    def title(self) -> str:
        """Gets the title of this Movie.


        :return: The title of this Movie.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Movie.


        :param title: The title of this Movie.
        :type title: str
        """

        self._title = title

    @property
    def description(self) -> str:
        """Gets the description of this Movie.


        :return: The description of this Movie.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Movie.


        :param description: The description of this Movie.
        :type description: str
        """

        self._description = description

    @property
    def genre(self) -> List[str]:
        """Gets the genre of this Movie.


        :return: The genre of this Movie.
        :rtype: List[str]
        """
        return self._genre

    @genre.setter
    def genre(self, genre: List[str]):
        """Sets the genre of this Movie.


        :param genre: The genre of this Movie.
        :type genre: List[str]
        """

        self._genre = genre

    @property
    def rating(self) -> float:
        """Gets the rating of this Movie.


        :return: The rating of this Movie.
        :rtype: float
        """
        return self._rating

    @rating.setter
    def rating(self, rating: float):
        """Sets the rating of this Movie.


        :param rating: The rating of this Movie.
        :type rating: float
        """

        self._rating = rating

    @property
    def release_year(self) -> int:
        """Gets the release_year of this Movie.


        :return: The release_year of this Movie.
        :rtype: int
        """
        return self._release_year

    @release_year.setter
    def release_year(self, release_year: int):
        """Sets the release_year of this Movie.


        :param release_year: The release_year of this Movie.
        :type release_year: int
        """

        self._release_year = release_year

    @property
    def duration(self) -> str:
        """Gets the duration of this Movie.


        :return: The duration of this Movie.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration: str):
        """Sets the duration of this Movie.


        :param duration: The duration of this Movie.
        :type duration: str
        """

        self._duration = duration

    @property
    def director(self) -> str:
        """Gets the director of this Movie.


        :return: The director of this Movie.
        :rtype: str
        """
        return self._director

    @director.setter
    def director(self, director: str):
        """Sets the director of this Movie.


        :param director: The director of this Movie.
        :type director: str
        """

        self._director = director

    @property
    def cast(self) -> List[CastMember]:
        """Gets the cast of this Movie.


        :return: The cast of this Movie.
        :rtype: List[CastMember]
        """
        return self._cast

    @cast.setter
    def cast(self, cast: List[CastMember]):
        """Sets the cast of this Movie.


        :param cast: The cast of this Movie.
        :type cast: List[CastMember]
        """

        self._cast = cast

    @property
    def poster(self) -> str:
        """Gets the poster of this Movie.


        :return: The poster of this Movie.
        :rtype: str
        """
        return self._poster

    @poster.setter
    def poster(self, poster: str):
        """Sets the poster of this Movie.


        :param poster: The poster of this Movie.
        :type poster: str
        """

        self._poster = poster

    @property
    def trailer_url(self) -> str:
        """Gets the trailer_url of this Movie.


        :return: The trailer_url of this Movie.
        :rtype: str
        """
        return self._trailer_url

    @trailer_url.setter
    def trailer_url(self, trailer_url: str):
        """Sets the trailer_url of this Movie.


        :param trailer_url: The trailer_url of this Movie.
        :type trailer_url: str
        """

        self._trailer_url = trailer_url

    @property
    def related_movies(self) -> List[RelatedMovie]:
        """Gets the related_movies of this Movie.


        :return: The related_movies of this Movie.
        :rtype: List[RelatedMovie]
        """
        return self._related_movies

    @related_movies.setter
    def related_movies(self, related_movies: List[RelatedMovie]):
        """Sets the related_movies of this Movie.


        :param related_movies: The related_movies of this Movie.
        :type related_movies: List[RelatedMovie]
        """

        self._related_movies = related_movies

    @property
    def awards(self) -> List[str]:
        """Gets the awards of this Movie.


        :return: The awards of this Movie.
        :rtype: List[str]
        """
        return self._awards

    @awards.setter
    def awards(self, awards: List[str]):
        """Sets the awards of this Movie.


        :param awards: The awards of this Movie.
        :type awards: List[str]
        """

        self._awards = awards
