from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from popcornhub_api.models.base_model import Model
from popcornhub_api.models.movie_suggestion import MovieSuggestion
from popcornhub_api import util

from popcornhub_api.models.movie_suggestion import MovieSuggestion  # noqa: E501

class ChatResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, text=None, suggestions=None):  # noqa: E501
        """ChatResponse - a model defined in OpenAPI

        :param text: The text of this ChatResponse.  # noqa: E501
        :type text: str
        :param suggestions: The suggestions of this ChatResponse.  # noqa: E501
        :type suggestions: List[MovieSuggestion]
        """
        self.openapi_types = {
            'text': str,
            'suggestions': List[MovieSuggestion]
        }

        self.attribute_map = {
            'text': 'text',
            'suggestions': 'suggestions'
        }

        self._text = text
        self._suggestions = suggestions

    @classmethod
    def from_dict(cls, dikt) -> 'ChatResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChatResponse of this ChatResponse.  # noqa: E501
        :rtype: ChatResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def text(self) -> str:
        """Gets the text of this ChatResponse.


        :return: The text of this ChatResponse.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this ChatResponse.


        :param text: The text of this ChatResponse.
        :type text: str
        """

        self._text = text

    @property
    def suggestions(self) -> List[MovieSuggestion]:
        """Gets the suggestions of this ChatResponse.


        :return: The suggestions of this ChatResponse.
        :rtype: List[MovieSuggestion]
        """
        return self._suggestions

    @suggestions.setter
    def suggestions(self, suggestions: List[MovieSuggestion]):
        """Sets the suggestions of this ChatResponse.


        :param suggestions: The suggestions of this ChatResponse.
        :type suggestions: List[MovieSuggestion]
        """

        self._suggestions = suggestions
