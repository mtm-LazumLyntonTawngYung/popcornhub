from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from popcornhub_api.models.base_model import Model
from popcornhub_api import util


class CastMember(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, role=None, image=None):  # noqa: E501
        """CastMember - a model defined in OpenAPI

        :param name: The name of this CastMember.  # noqa: E501
        :type name: str
        :param role: The role of this CastMember.  # noqa: E501
        :type role: str
        :param image: The image of this CastMember.  # noqa: E501
        :type image: str
        """
        self.openapi_types = {
            'name': str,
            'role': str,
            'image': str
        }

        self.attribute_map = {
            'name': 'name',
            'role': 'role',
            'image': 'image'
        }

        self._name = name
        self._role = role
        self._image = image

    @classmethod
    def from_dict(cls, dikt) -> 'CastMember':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CastMember of this CastMember.  # noqa: E501
        :rtype: CastMember
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this CastMember.


        :return: The name of this CastMember.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this CastMember.


        :param name: The name of this CastMember.
        :type name: str
        """

        self._name = name

    @property
    def role(self) -> str:
        """Gets the role of this CastMember.


        :return: The role of this CastMember.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role: str):
        """Sets the role of this CastMember.


        :param role: The role of this CastMember.
        :type role: str
        """

        self._role = role

    @property
    def image(self) -> str:
        """Gets the image of this CastMember.


        :return: The image of this CastMember.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image: str):
        """Sets the image of this CastMember.


        :param image: The image of this CastMember.
        :type image: str
        """

        self._image = image
