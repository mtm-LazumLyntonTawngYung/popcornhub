from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from popcornhub_api.models.base_model import Model
from popcornhub_api import util


class RelatedMovie(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, title=None, poster=None, rating=None):  # noqa: E501
        """RelatedMovie - a model defined in OpenAPI

        :param id: The id of this RelatedMovie.  # noqa: E501
        :type id: int
        :param title: The title of this RelatedMovie.  # noqa: E501
        :type title: str
        :param poster: The poster of this RelatedMovie.  # noqa: E501
        :type poster: str
        :param rating: The rating of this RelatedMovie.  # noqa: E501
        :type rating: float
        """
        self.openapi_types = {
            'id': int,
            'title': str,
            'poster': str,
            'rating': float
        }

        self.attribute_map = {
            'id': 'id',
            'title': 'title',
            'poster': 'poster',
            'rating': 'rating'
        }

        self._id = id
        self._title = title
        self._poster = poster
        self._rating = rating

    @classmethod
    def from_dict(cls, dikt) -> 'RelatedMovie':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RelatedMovie of this RelatedMovie.  # noqa: E501
        :rtype: RelatedMovie
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this RelatedMovie.


        :return: The id of this RelatedMovie.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this RelatedMovie.


        :param id: The id of this RelatedMovie.
        :type id: int
        """

        self._id = id

    @property
    def title(self) -> str:
        """Gets the title of this RelatedMovie.


        :return: The title of this RelatedMovie.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this RelatedMovie.


        :param title: The title of this RelatedMovie.
        :type title: str
        """

        self._title = title

    @property
    def poster(self) -> str:
        """Gets the poster of this RelatedMovie.


        :return: The poster of this RelatedMovie.
        :rtype: str
        """
        return self._poster

    @poster.setter
    def poster(self, poster: str):
        """Sets the poster of this RelatedMovie.


        :param poster: The poster of this RelatedMovie.
        :type poster: str
        """

        self._poster = poster

    @property
    def rating(self) -> float:
        """Gets the rating of this RelatedMovie.


        :return: The rating of this RelatedMovie.
        :rtype: float
        """
        return self._rating

    @rating.setter
    def rating(self, rating: float):
        """Sets the rating of this RelatedMovie.


        :param rating: The rating of this RelatedMovie.
        :type rating: float
        """

        self._rating = rating
